--- a/src/modules/rlm_eap/libeap/eap_tls.c
+++ b/src/modules/rlm_eap/libeap/eap_tls.c
@@ -45,6 +45,7 @@ RCSID("$Id: 5c47513e62724cb621aeb55f65e0
 #include <assert.h>
 #include "eap_tls.h"
 
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 /*
  *      Allocate a new TLS_PACKET
  */
@@ -1088,3 +1089,4 @@ int eaptls_compose(EAP_DS *eap_ds, EAPTL
 	return 1;
 }
 
+#endif
--- a/src/modules/rlm_eap/libeap/mppe_keys.c
+++ b/src/modules/rlm_eap/libeap/mppe_keys.c
@@ -51,6 +51,7 @@ static void add_reply(VALUE_PAIR** vp,
 /*
  * TLS PRF from RFC 2246
  */
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 static void P_hash(const EVP_MD *evp_md,
 		   const unsigned char *secret, unsigned int secret_len,
 		   const unsigned char *seed,   unsigned int seed_len,
@@ -142,31 +143,10 @@ void eaptls_gen_mppe_keys(VALUE_PAIR **r
 
 	prf_size = strlen(prf_label);
 
-#if OPENSSL_VERSION_NUMBER >= 0x10001000L
 	if (SSL_export_keying_material(s, out, sizeof(out), prf_label, prf_size, NULL, 0, 0) != 1) {
 		DEBUG("Failed generating keying material");
 		return;
 	}
-#else
-	{
-		unsigned char buf[4*EAPTLS_MPPE_KEY_LEN];
-		unsigned char seed[64 + 2*SSL3_RANDOM_SIZE];
-
-		p = seed;
-		memcpy(p, prf_label, prf_size);
-		p += prf_size;
-
-		memcpy(p, s->s3->client_random, SSL3_RANDOM_SIZE);
-		p += SSL3_RANDOM_SIZE;
-		prf_size += SSL3_RANDOM_SIZE;
-
-		memcpy(p, s->s3->server_random, SSL3_RANDOM_SIZE);
-		prf_size += SSL3_RANDOM_SIZE;
-
-		PRF(s->session->master_key, s->session->master_key_length,
-		    seed, prf_size, out, buf, sizeof(out));
-	}
-#endif
 
 	p = out;
 	add_reply(reply_vps, "MS-MPPE-Recv-Key", p, EAPTLS_MPPE_KEY_LEN);
@@ -188,32 +168,14 @@ void eaptls_gen_mppe_keys(VALUE_PAIR **r
  */
 void eapttls_gen_challenge(SSL *s, uint8_t *buffer, size_t size)
 {
-#if OPENSSL_VERSION_NUMBER < 0x10001000L
-	uint8_t out[32], buf[32];
-	uint8_t seed[sizeof(EAPTLS_PRF_CHALLENGE)-1 + 2*SSL3_RANDOM_SIZE];
-	uint8_t *p = seed;
-#endif
 
 	if (!s->s3) {
 		DEBUG("ERROR: No SSLv3 information");
 		return;
 	}
 
-#if OPENSSL_VERSION_NUMBER >= 0x10001000L
 	SSL_export_keying_material(s, buffer, size, EAPTLS_PRF_CHALLENGE,
 				   sizeof(EAPTLS_PRF_CHALLENGE) - 1, NULL, 0, 0);
-#else
-	memcpy(p, EAPTLS_PRF_CHALLENGE, sizeof(EAPTLS_PRF_CHALLENGE)-1);
-	p += sizeof(EAPTLS_PRF_CHALLENGE)-1;
-	memcpy(p, s->s3->client_random, SSL3_RANDOM_SIZE);
-	p += SSL3_RANDOM_SIZE;
-	memcpy(p, s->s3->server_random, SSL3_RANDOM_SIZE);
-
-	PRF(s->session->master_key, s->session->master_key_length,
-	    seed, sizeof(seed), out, buf, sizeof(out));
-
-	memcpy(buffer, out, size);
-#endif
 }
 
 /*
@@ -239,3 +201,5 @@ void eaptls_gen_eap_key(SSL *s, uint32_t
 	vp->length = 1 + 2 * SSL3_RANDOM_SIZE;
 	pairadd(vps, vp);
 }
+
+#endif
--- a/src/modules/rlm_eap/types/rlm_eap_tls/rlm_eap_tls.c
+++ b/src/modules/rlm_eap/types/rlm_eap_tls/rlm_eap_tls.c
@@ -49,6 +49,7 @@ RCSID("$Id: 941b5602a6744f8799b82943e77e
 #include <openssl/ocsp.h>
 #endif
 
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 static CONF_PARSER cache_config[] = {
 	{ "enable", PW_TYPE_BOOLEAN,
 	  offsetof(EAP_TLS_CONF, session_cache_enable), NULL, "no" },
@@ -1899,3 +1900,4 @@ EAP_TYPE rlm_eap_tls = {
 	eaptls_detach			/* detach */
 };
 
+#endif
